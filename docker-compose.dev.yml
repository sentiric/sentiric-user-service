# docker-compose.dev.yml
# Service Geliştirme ortamı

networks:
  sentiric-net:
    name: "${NETWORK_NAME:-sentiric-net}"
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
          gateway: ${NETWORK_GATEWAY}
  
# volumes:
  # [infra]: Temel Altyapı (Infrastructure Layer)
  # --------------------------------------------------

services:
  # [core-service]: Çekirdek Servisler ve Kütüphaneler (Core Layer)
  # -------------------------------------------------- 
  user-service:
    build: { context: ../sentiric-user-service }
    env_file: ["${ENV_FILE_PATH}"]
    volumes: 
      - "${CONFIG_REPO_PATH}:/sentiric-config:ro"
      - "${CERTIFICATES_REPO_PATH}:/sentiric-certificates:ro"
      - "${ASSETS_REPO_PATH}:/sentiric-assets:ro"
    ports: 
      - "12010:${USER_SERVICE_HTTP_PORT:-12010}"
      - "12011:${USER_SERVICE_GRPC_PORT:-12011}"
      - "12012:${USER_SERVICE_METRICS_PORT:-12012}"          
    networks:
      sentiric-net:
        ipv4_address: ${USER_SERVICE_IPV4_ADDRESS}       
    restart: always
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "12011"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s    
    # depends_on: 
    #   postgres: { condition: service_healthy } 